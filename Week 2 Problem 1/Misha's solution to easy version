;;; This program is intended as a solution for UIC SIG Math, problem 2.

;;; Author: Misha Ryabko

;;; The problem statement is as follows:
;;; Print the first n primes(in this case n = 10), without using any variables or assignment operators
;;; Even though procedures are first class in scheme, and thus indistinguishable from data, using a procedure as a return value or as a parameter do not violate the rules
;;; Also, the "define" operator will only be considered an assignment operator when assigning a value to a variable, not a procedure definition

;;; This problem starts out by assuming a list of 1 through n is given
;;; First portion of the program is the solution to the easy portion of the problem

#lang scheme

(define generate-list (lambda (n)
                      (if (= n 2)
                          (list 2)
                          (cons (- n 1) (generate-list (- n 1))))))

(define iszero? (lambda (x)
                (= x 0)))

;; generate a list of possible divisors using the generate-list procedure use andmap to check primality for the number and list generated
(define prime-check? (lambda (x)
                     (not (ormap iszero? (mod-map x)))))

(define mod-map (lambda (x)
                        (map (lambda (y) (modulo x y)) (generate-list x))))

(define first-n-primes (lambda (n)
                           (if (= n 2)
                               (list 2)
                               (if (prime-check? n)
                                   (cons n( first-n-primes (- n 1)))
                                   (first-n-primes (- n 1))))))
